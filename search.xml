<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2022/08/22/hello-world/"/>
      <url>/blog/2022/08/22/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>0823</title>
      <link href="/blog/2022/08/21/daily/8%E6%9C%88/"/>
      <url>/blog/2022/08/21/daily/8%E6%9C%88/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo-配置教程："><a href="#hexo-配置教程：" class="headerlink" title="hexo 配置教程："></a>hexo 配置教程：</h1><p>文章格式 ： 链接- <a href="https://butterfly.js.org/posts/dc584b87/#Front-matter">butterfly</a></p><hr><h2 id="头部（post）"><a href="#头部（post）" class="headerlink" title="头部（post）"></a>头部（post）</h2><p><strong>配置项</strong>（可选）：</p><p><code>copyright</code> : false  转载文章, 不需要显示版权</p><p><code>indexing</code>: false   排除被搜索</p><blockquote><p> <code>sticky</code>  置顶。数字越大，置顶的优先级越大</p><p> <code>tags</code> 文章标签<br> <code>categories</code>  分类<br> <code>updated</code>   更新日期 , 默认值/不写 为当天；<br> <code>keywords</code>   文章关键字<br> <code>top_img</code> 顶部图片<br> <code>toc</code>  目录<br> <code>aside</code> 显示侧边栏 (默认 true)<br> <code>aplayer</code>  加载aplayer的js和css,请参考 <strong>音乐</strong> 配置<br> <code>highlight_shrink</code>    代码框是否展开(true/false)  默认false<br> <code>comments</code>  显示页面评论模块(默认 true)<br> <code>mathjax</code>  数学式 beauty<br> <code>katex</code> 公式 beauty</p></blockquote><p>coop coep  跨域等安全问题 -<a href="https://www.51cto.com/article/716598.html">文</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2013/07/13/jQstart%E7%AC%94%E8%AE%B0/"/>
      <url>/blog/2013/07/13/jQstart%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="jQuery中文文档-菜鸟教程笔记"><a href="#jQuery中文文档-菜鸟教程笔记" class="headerlink" title="jQuery中文文档 菜鸟教程笔记"></a><a href="https://www.jquery123.com/hover/">jQuery中文文档</a> <a href="https://www.runoob.com/jquery/jquery-tutorial.html">菜鸟教程笔记</a></h1><h2 id="1-1-安装。"><a href="#1-1-安装。" class="headerlink" title="1-1 安装。"></a>1-1 安装。</h2><p>网页中添加： 1. 从jquery.com下载jQuery库</p><p>​                * Production version用于实际网站  * Development version测试开发 这两个版本</p><p>​            2.从CDN载入jQuery。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2语法。"><a href="#1-2语法。" class="headerlink" title="1-2语法。"></a>1-2语法。</h3><p>​                选取元素,对元素执行操作 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).action()</span><br></pre></td></tr></table></figure><p>  文档就绪事件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="params"><span class="keyword">function</span>()</span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//或者 $(function())&#123; &#125;</span></span><br></pre></td></tr></table></figure><h3 id="1-3选择器："><a href="#1-3选择器：" class="headerlink" title="1-3选择器："></a>1-3选择器：</h3><p>jQuery 选择器允许对 HTML<strong>元素组</strong>或单个元素进行操作。</p><ol><li><p>元素名 ：$(“p”)</p></li><li><p>id 选择器 $(“#test”)</p></li><li><p>.class 选择器 $(“.test”)</p><p>. 表示class       #  id    ：类型(type)    [ ]  属性</p><p><strong>:</strong> 即为 jQuery 的过滤选择器，语法类似于 css 中的伪类选择器；其过滤选择器大概可以分为基本过滤（p:first 之类）、内容过滤（:empty）、子元素过滤(:first-child)和属性过滤 <strong>[href]</strong> 选择器。</p></li></ol><table><thead><tr><th>$(“p:first”)</th><th align="center">选取第一个 <p> 元素</th></tr></thead><tbody><tr><td>$(“ul li:first”)</td><td align="center">选取第一个 <ul> 元素的第一个 <li> 元素</td></tr><tr><td>$(“ul li:first-child”)</td><td align="center">选取每个 <ul> 元素的第一个 <li> 元素</td></tr><tr><td>$(“[href]”)</td><td align="center">选取带有 href 属性的元素</td></tr><tr><td>$(“tr:even”)</td><td align="center">选取偶数位置的 <tr> 元素  odd 奇数</td></tr><tr><td>$(“:button”)</td><td align="center">选取所有 type=”button” 的 <input> 元素 和 <button> 元素</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  $(<span class="string">&quot;button&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;.test&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#id&quot;, &quot;.class&quot;)  复合选择器</span><br><span class="line">$(div p span)       层级选择器 <span class="comment">//div下的p元素中的span元素</span></span><br><span class="line">$(div&gt;p)            父子选择器 <span class="comment">//div下的所有p元素</span></span><br><span class="line">$(div+p)            相邻元素选择器 <span class="comment">//div后面的p元素(仅一个p)</span></span><br><span class="line">$(div~p)            兄弟选择器  <span class="comment">//div后面的所有p元素(同级别)</span></span><br><span class="line">$(.p:last)          类选择器 加 过滤选择器  第一个和最后一个（first 或者 last）</span><br><span class="line">$(&quot;#mytable td:odd&quot;)      层级选择 加 过滤选择器 奇偶（odd 或者 even）</span><br><span class="line">$(&quot;div p:eq(<span class="number">2</span>)&quot;)    索引选择器 <span class="selector-tag">div</span>下的第三个<span class="selector-tag">p</span>元素（索引是从<span class="number">0</span>开始）</span><br><span class="line">$(&quot;a[href=&#x27;www.baidu.com&#x27;]&quot;)  属性选择器</span><br><span class="line">$(&quot;p:contains(test)&quot;)        <span class="comment">// 内容过滤选择器，包含&quot;text内容&quot;的p元素</span></span><br><span class="line">$(&quot;div:has(p)&quot;)         <span class="comment">//含有&quot;p标签&quot;的div标签</span></span><br><span class="line">$(&quot;:empty&quot;)        <span class="comment">//内容过滤选择器，所有空标签（不包含子标签和内容的标签）parent 相反</span></span><br><span class="line">$(&quot;:hidden&quot;)       <span class="comment">//所有隐藏元素 visible </span></span><br><span class="line">$(&quot;input:enabled&quot;) <span class="comment">//选取所有启用的表单元素</span></span><br><span class="line">$(&quot;:disabled&quot;)     <span class="comment">//所有不可用的元素</span></span><br><span class="line">$(&quot;input:checked&quot;) <span class="comment">//获取所有选中的复选框单选按钮等</span></span><br><span class="line">$(&quot;select option:selected&quot;) <span class="comment">//获取选中的选项元素</span></span><br></pre></td></tr></table></figure><h3 id="1-4-事件"><a href="#1-4-事件" class="headerlink" title="1-4 事件"></a>1-4 事件</h3><pre><code>&gt; 页面对不同访问者的响应 叫做事件&gt;&gt; &gt; &gt; 事件处理程序：当html中发生某些事件时所调用的方法</code></pre><p> <strong>语法</strong>：1. 为元素指定点击事件：</p><p>​        2. 定义什么时间出发事件(事件函数)实现：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>).<span class="title function_">click</span>(); <span class="comment">//1</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;       <span class="comment">//2</span></span><br><span class="line">    <span class="comment">// 动作触发后执行的代码!!</span></span><br><span class="line">&#125;);              </span><br></pre></td></tr></table></figure><p>​    <strong>获取触发事件的说明</strong> ：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="variable language_">window</span>).<span class="title function_">keypress</span>(<span class="keyword">function</span>(<span class="params">event</span>)&#123;    </span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(event); <span class="comment">//获取事件对象，里面包含各种有用的信息。</span></span><br><span class="line"><span class="comment">//keypress中event.which是获取ASCII码，前面的函数是将ASCII码转换成字符，空格键和Enter键输出均为空白。 </span></span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(event.<span class="property">which</span>));</span><br><span class="line"><span class="comment">//从event对象中key属性获取字符，但是Enter键的key值为&quot;Enter&quot;，空白键还是空白&quot; &quot;。</span></span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(event.<span class="property">key</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="常用事件方法：-事件方法档案"><a href="#常用事件方法：-事件方法档案" class="headerlink" title="常用事件方法：  事件方法档案"></a>常用事件方法：  <a href="https://www.runoob.com/jquery/jquery-ref-events.html">事件方法档案</a></h5><p> <strong>$(document).ready()</strong> 方法允许我们在文档完全加载完后执行函数。</p><blockquote><p>以下介绍是 <code>x方法触发y事件/触发被选元素的y事件</code>，或<code>添加当发生x事件时运行的函数y（可选项）。</code></p><p>​                除了hover 不是👆</p></blockquote><blockquote><h5 id="Ex"><a href="#Ex" class="headerlink" title="**Ex:  **"></a>**Ex:  **</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>).<span class="title function_">mouseover</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;$(<span class="string">&quot;p&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;yellow&quot;</span>);&#125;);  <span class="comment">//over事件运的函数</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).<span class="title function_">mouseout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;$(<span class="string">&quot;p&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;lightgray&quot;</span>);&#125;); <span class="comment">//同👆</span></span><br><span class="line">$(<span class="string">&quot;#btn1&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;  $(<span class="string">&quot;p&quot;</span>).<span class="title function_">mouseover</span>();&#125;);  <span class="comment">//click方法触发 x over事件</span></span><br><span class="line">$(<span class="string">&quot;#btn2&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;  $(<span class="string">&quot;p&quot;</span>).<span class="title function_">mouseout</span>();&#125;);  <span class="comment">//click方法触发x out事件</span></span><br></pre></td></tr></table></figure></blockquote><hr><ul><li><p> <strong>click()</strong> 方法 在用户点击html元素时执行。 【点击按下松开的这一过程结束。】</p></li><li><p><strong><code>dbl</code>click()</strong> 方法 ，<strong>双击</strong>元素时发生</p><hr></li></ul><blockquote><p><strong>hide</strong>和 <strong>fadeOut</strong>都可以带有参数：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(selector).<span class="title function_">hide</span>(speed,callback);  <span class="comment">//隐藏   show 显示   hide隐藏的效果是从下至上或从右下到左上的慢慢折叠缩小</span></span><br><span class="line">$(selector).<span class="title function_">fadeOut</span>(speed,callback); <span class="comment">//淡出  fadeIn淡入  fadeOut的淡出效果是整体淡化直至消失。</span></span><br></pre></td></tr></table></figure><hr><ul><li><p><strong>mouse<code>enter</code></strong>() 方法  当鼠标指针**<code>穿过</code><strong>元素时发生, <strong>mouse<code>leave</code></strong>() 鼠标指针</strong><code>离开</code>**时发生</p><ul><li>区别于mouse**<code>over</code>**,鼠标移动元素及其子元素上时都会触发，而<code>enter</code>只在选取的元素上时才触发     ~~~mouse<code>out</code>  mouse<code>leave</code> 类似👆~~~</li></ul></li><li><p><strong>mouse<code>down</code></strong>() 方法  当鼠标指针移动到**<code>元素</code><strong>上方并</strong>按**下鼠标<code>左右按键</code>时发生, **mouse<code>up</code>**与之相反</p></li><li><p><strong>hover</strong>() 方法 用于模拟光标**<code>悬停</code>**事件 .  (<code>.hover()</code>方法是同时绑定 <code>mouseenter</code>和 <code>mouseleave</code>事件)    <strong>注意:</strong> 如果只指定一个函数，则 mouseenter 和 mouseleave 都执行这个函数。—</p></li></ul><blockquote><p>当鼠标<code>移动</code>到元素上时，会触发指定的第一个函数(mouse<code>enter</code>);</p><p>当鼠标<code>移出</code>这个元素时，会触发指定的第二个函数(mouse<code>leave</code>)。</p></blockquote><blockquote><p>​        $(“#p1”).<code>hover</code>( <code>function()</code>{ alert(“你进入了 p1!”); }<code>,</code><br>​                         <code>function()</code>{alert(“拜拜! 现在你离开了 p1!”); });</p></blockquote><blockquote><p> 语法：$(<em>selector</em>).hover(<em>inFunction,outFunction</em>) 等同于 <code>$( selector ).mouseover( handlerIn ).mouseout( handlerOut );</code></p><p><code>$(selector).hover(handlerInOut)</code>等同于<code>$( selector ).on( &quot;mouseover mouseout&quot;, handlerInOut );</code></p></blockquote><hr><ul><li><p><strong>focus</strong>()方法   当元素<strong>获得焦点</strong>时，发生 focus 事件。</p><p>当通过<strong>鼠标</strong>点击<strong>选中</strong>元素或通过<strong>tab <strong>键</strong>定位</strong>到元素时，该元素就会获得焦点。</p></li></ul><ul><li><p><strong>blur</strong>()方法 当元素失去焦点时，发生blur事件  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;input&quot;</span>).<span class="title function_">focus</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123; $(<span class="variable language_">this</span>).<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;#ff0000&quot;</span>);&#125;)；</span><br><span class="line">$(<span class="string">&quot;input&quot;</span>).<span class="title function_">blur</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123; $(<span class="variable language_">this</span>).<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;#ffffff&quot;</span>);&#125;);</span><br><span class="line"><span class="comment">// $(selecotr).css(&quot;attribute&quot;,&quot;value&quot;);</span></span><br></pre></td></tr></table></figure><hr></li></ul><h4 id="余下的：-键盘类。表单类。文档-窗口类"><a href="#余下的：-键盘类。表单类。文档-窗口类" class="headerlink" title="余下的：  键盘类。表单类。文档/窗口类"></a>余下的：  键盘类。表单类。文档/窗口类</h4><p>​    <strong>keypress()</strong> - 键被按下  <strong>keydown</strong>- 键被按下的过程(用于检测按哪个键)   <strong>keyup</strong>-键被松开</p><p>​        <strong>keypress()<strong>与</strong>click</strong> 有区别：</p><p>​        在Input内输入时 keypress 计数的是输入的个数而不是按下到起来算一次。( ALT、CTRL、SHIFT、ESC等这些按键不会触发 keypress事件) （<strong>检测不到汉字输入法输入？</strong>）</p><p>​            <code>i = 0 ;  $(&quot;span&quot;).text(i+=1); </code>span内 从0开始计数</p><p>​    <strong>keydown</strong>: 使用event.which 属性返回哪个键盘键（或鼠标按钮用mousedown)被按下。</p><p>​        <code>$(&quot;div&quot;).html(&quot; &quot; + event.which);</code>//div显示 键盘数字码，event来自事件绑定函数</p><h5 id="keypress-keydown-keyup的区别"><a href="#keypress-keydown-keyup的区别" class="headerlink" title="keypress,keydown,keyup的区别:"></a><strong>keypress,keydown,keyup的区别:</strong></h5><ul><li><p> 1.keydown：一直按着则会不断触发（opera浏览器除外）, 它返回的是键盘代码;</p></li><li><p> 2.keypress：按下一个按键，并产生一个字符时发生, 返回ASCII码。注意: <strong>shift、alt、ctrl</strong>等键按下并不会产生字符，所以监听无效 ,换句话说, 只有按下能在屏幕上输出字符的按键时keypress事件才会触发。若一直按着某按键则会不断触发。</p></li><li><p>3.keyup：用户松开某一个按键时触发, 与keydown相对, 返回键盘代码.</p><p>​    案例1:获取按键代码或字符的ASCII码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">keydown</span>( <span class="keyword">function</span>(<span class="params">event</span>)&#123;</span><br><span class="line">   <span class="comment">// 通过event.which可以拿到按键代码.  如果是keypress事件中,则拿到ASCII码.</span></span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure><p>​       案例2:传递数据给事件处理函数:</p><p><code>jQueryObject.keydown( [[ data ,]  handler ] );</code></p><p>data: 通过event.data传递给事件处理函数的任意数据; handler: 指定的事件处理函数;</p><p>Ex: </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只允许按下的字母键生效, 65~90是所有小写字母的键盘代码范围.</span></span><br><span class="line"><span class="keyword">var</span> validKeys = &#123; <span class="attr">start</span>: <span class="number">65</span>, <span class="attr">end</span>: <span class="number">90</span>  &#125;;</span><br><span class="line">$(<span class="string">&quot;#keys&quot;</span>).<span class="title function_">keydown</span>( validKeys, <span class="keyword">function</span>(<span class="params">event</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> keys = event.<span class="property">data</span>;  <span class="comment">//拿到validKeys对象.</span></span><br><span class="line">    <span class="keyword">return</span> event.<span class="property">which</span> &gt;= keys.<span class="property">start</span> &amp;&amp; event.<span class="property">which</span> &lt;= keys.<span class="property">end</span>;</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></li></ul><p>···················································</p><p>​    <strong>submit</strong>  提交表单时会发送该事件，该事件只适用于<form>元素。 阻止表单提交：</p><p>​                           <code> $(&quot;form&quot;).submit(function(event)&#123;</code><br>​                              <code> event.preventDefault();&#125;);</code></p><p>​        <strong>change</strong> 当元素的值改变时发生，仅适用于表单字段。 (input 、select &gt;option)</p><blockquote><p> <strong>注意：</strong>当用于 select 元素时，change 事件会在选择某个选项时发生。当用于 text field 或 text area 时，change 事件会在元素失去焦点时发生。</p></blockquote><hr><p>​    <strong>load 在jQuery1.8版本中已废弃</strong></p><hr><blockquote><p>load() 方法添加事件处理程序到 load 事件。当指定的元素已加载时，会发生 load 事件。</p></blockquote><blockquote><p>该事件适用于任何带有 URL 的元素（比如图像、脚本、框架、内联框架）以及 window 对象。</p></blockquote><blockquote><p>根据不同的浏览器（Firefox 和 IE），如果图像已被缓存，则也许不会触发 load 事件。</p></blockquote><blockquote><p><strong>注意：</strong>还存在一个名为 load() 的 jQuery <a href="https://www.runoob.com/jquery/jquery-ref-ajax.html">AJAX</a> 方法。根据不同的参数决定调用哪个方法。</p></blockquote><hr><p>​    <strong>resize</strong>方法 当调整浏览器窗口大小时，发生 resize 事件。</p><p>​        <code>$(window).resize(function()&#123;&#125;);</code></p><p>​    <strong>scroll</strong>方法 当用户滚动指定的元素时 </p><p>​         scroll 事件适用于所有可滚动的元素和 window 对象（浏览器窗口）。</p><p>​    <strong>unload</strong>  方法在 jQuery 版本 <strong>1.8 中<a href="https://www.runoob.com/jquery/NewWindow('deprecated.htm')">被废弃</a>，在 3.0 版本</strong>被移除。 该方法只应用于 window 对象。</p><hr><blockquote><p>Firefox 与 Chrome 会阻止弹窗，所以没办法看到效果。</p><p>​    当用户离开页面时，会发生 unload 事件。</p><p>当发生以下情况下，会触发 unload 事件：</p><ul><li><p>点击某个离开页面的链接</p></li><li><p>在地址栏中键入了新的 URL</p></li><li><p>使用前进或后退按钮</p></li><li><p>关闭浏览器窗口</p></li><li><p>重新加载页面</p><p>unload 事件在不同浏览器中效果不一样，请确保使用前在所有浏览器测试该方法。</p></li></ul></blockquote><hr>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/blog/categories/index.html"/>
      <url>/blog/categories/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/blog/link/index.html"/>
      <url>/blog/link/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/blog/tags/index.html"/>
      <url>/blog/tags/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
  
</search>
